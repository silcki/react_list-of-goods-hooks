{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","sorted","useState","Default","sortField","setSortField","isReversed","setIsReversed","makeSetSortField","field","showGoods","goods","localGoods","sort","good1","good2","Name","localeCompare","Length","length","reverse","sortGoods","className","type","cn","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,qBAAAA,I,eAAAA,I,oBAAAA,M,KAoCE,IAAME,EAAgB,WAC3B,IAIuBC,EAJvB,EAAkCC,mBAAmBJ,EAASK,SAA9D,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAoCH,oBAAS,GAA7C,mBAAOI,EAAP,KAAmBC,EAAnB,KAEMC,EAAmB,SAACC,GAAD,OAAqB,kBAAMJ,EAAaI,KAG3DC,EAhCR,SAAmBC,EAAnB,GAAwE,IAAlCP,EAAiC,EAAjCA,UAAWE,EAAsB,EAAtBA,WACzCM,EAAU,YAAOD,GAqBvB,OAnBIP,GACFQ,EAAWC,MAAK,SAACC,EAAOC,GACtB,OAAQX,GACN,KAAKN,EAASkB,KACZ,OAAOF,EAAMG,cAAcF,GAE7B,KAAKjB,EAASoB,OACZ,OAAOJ,EAAMK,OAASJ,EAAMI,OAE9B,QACE,OAAO,MAKXb,GACFM,EAAWQ,UAGNR,EAUWS,CAChBtB,EACA,CAAEK,YAAWE,eAQf,OACE,sBAAKgB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,CAAC,SAAU,WACX,CAAE,WAAYpB,IAAcN,EAASkB,OAEvCS,QAASjB,EAAiBV,EAASkB,MANrC,iCAWA,wBACEO,KAAK,SACLD,UAAWE,IACT,CAAC,SAAU,cACX,CAAE,WAAYpB,IAAcN,EAASoB,SAEvCO,QAASjB,EAAiBV,EAASoB,QANrC,4BAWA,wBACEK,KAAK,SACLD,UAAWE,IACT,CAAC,SAAU,cACX,CACE,YAAalB,IAGjBmB,SA7CexB,GA6CSK,EA7CW,kBAAMC,EAAcN,KAqCzD,sBAaEG,GAAaE,IACb,wBACEiB,KAAK,SACLD,UAAU,4BACVG,QA/CI,WACZpB,EAAaP,EAASK,SACtBI,GAAc,IA0CR,sBAUJ,6BACGG,EAAUgB,KAAI,SAAAC,GAAI,OACjB,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,YCvHlCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.5ba24e1b.chunk.js","sourcesContent":["import { useState } from 'react';\nimport cn from 'classnames';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  Default = 0,\n  Name = 1,\n  Length = 2,\n}\n\ntype Filter = {\n  sortField: SortType,\n  isReversed: boolean,\n};\n\nfunction sortGoods(goods: string[], { sortField, isReversed }: Filter) {\n  const localGoods = [...goods];\n\n  if (sortField) {\n    localGoods.sort((good1, good2) => {\n      switch (sortField) {\n        case SortType.Name:\n          return good1.localeCompare(good2);\n\n        case SortType.Length:\n          return good1.length - good2.length;\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (isReversed) {\n    localGoods.reverse();\n  }\n\n  return localGoods;\n}\n\nexport const App: React.FC = () => {\n  const [sortField, setSortField] = useState<SortType>(SortType.Default);\n  const [isReversed, setIsReversed] = useState(false);\n\n  const makeSetSortField = (field: SortType) => () => setSortField(field);\n  const makeSetSorted = (sorted: boolean) => () => setIsReversed(sorted);\n\n  const showGoods = sortGoods(\n    goodsFromServer,\n    { sortField, isReversed },\n  );\n\n  const reset = () => {\n    setSortField(SortType.Default);\n    setIsReversed(false);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn(\n            ['button', 'is-info'],\n            { 'is-light': sortField !== SortType.Name },\n          )}\n          onClick={makeSetSortField(SortType.Name)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn(\n            ['button', 'is-success'],\n            { 'is-light': sortField !== SortType.Length },\n          )}\n          onClick={makeSetSortField(SortType.Length)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn(\n            ['button', 'is-warning'],\n            {\n              'is-light': !isReversed,\n            },\n          )}\n          onClick={makeSetSorted(!isReversed)}\n        >\n          Reverse\n        </button>\n\n        {(sortField || isReversed) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={reset}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {showGoods.map(good => (\n          <li data-cy=\"Good\" key={good}>{good}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}